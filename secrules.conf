#IDs from 10 to 1000 are reserved for attack rules (Ddos, injections, etc.). They go 10 by 10 for clarity.
#Enforce an existing IP address block and log only 1-time/minute
#SecRule IP:DOS_BLOCK "@eq 1" "chain, phase:1, id:'10', drop, msg:'Denial of Service (DoS) Attack Identified from %{tx.real_ip} (%{tx.dos_block_counter} hits since last alert)', setvar:ip.dos_block_counter=+1"
    #SecRule &IP:DOS_BLOCK_FLAG "@eq 0" "setvar:ip.dos_block_flag=1, expirevar:ip.dos_block_flag=60, setvar:tx.dos_block_counter=%{ip.dos_block_counter}, setvar:ip.dos_block_counter=0"
#If the current IP address has already been blocked due to high requests. In this case, we skip doing the request counts.
#SecRule IP:DOS_BLOCK "@eq 1" "phase:5, id:'20', nolog, pass, skipAfter:END_DOS_PROTECTION_CHECKS"

#IDs from 1000 to 1500 are reserved for php rules.
#block request to specific files
#SecRule REQUEST_URI "@streq /index.php" "id:1000, phase:1, deny, msg:'index.php request blocked'" 
#SecRule REQUEST_URI "@streq /admin.php" "id:1010, phase:1, deny, msg:'admin.php request blocked'"

# Redirect to a different page when a PHP file is uploaded
#SecRule FILES "(?i)\.php$" "id:1020, log, redirect:https://facili-tacct-nginx.osc-fr1.scalingo.io, msg:'PHP file upload blocked'"

#SecRule REQUEST_URI_RAW "https:/" "phase:1,id:53,allow, msg:'TEST ALLOW'"


#SecRule REQUEST_METHOD "!@within %{tx.allowed_methods}" "phase:1,t:none,allow"

#SecRule ARGS "t:none,log,allow,msg:'ALLOW ALL TEST',id:2"

#False positives
#SecAction \
 #"id:949110,\
  #phase:1,\
  #nolog,\
  #pass,\
  #t:none,\
  #setvar:tx.inbound_anomaly_score_threshold=500000,\
  #setvar:tx.outbound_anomaly_score_threshold=400000"

#SecRuleRemoveById 949110
SecRule REQUEST_URI "@beginsWith /app/" "id:45666, phase:1, pass, setvar:'tx.anomaly_score_pl1=100'"

SecRule REQUEST_URI "@beginsWith /app/vendor/nginx/" \
    "id:13001,\
    phase:1,\
    pass,\
    nolog,\
    ctl:ruleRemoveById=949110"
